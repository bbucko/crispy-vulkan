# Build Configuration for Travis
# https://travis-ci.org

language:
  - cpp

python:
  - "3.5"

jdk: oraclejdk8

matrix:
  # Show final status immediately if a test fails.
  fast_finish: true
  include:
    # Linux GCC release build.
    - os: linux
      compiler: gcc
      sudo: required
      dist: trusty
      env: KSB_TARGET=LINUX KSB_TYPE=Release
    # Linux GCC debug build for code coverage.
    - os: linux
      compiler: gcc
      sudo: required
      dist: trusty
      env: KSB_TARGET=COVERAGE KSB_TYPE=Debug
    # Linux GCC release build for code coverage.
    - os: linux
      compiler: gcc
      sudo: required
      dist: trusty
      env: KSB_TARGET=COVERAGE KSB_TYPE=Release
    # Mac OS X Clang debug build.
    - os: osx
      compiler: clang
      sudo: required
      env: KSB_TARGET=OSX KSB_TYPE=Debug
    # Mac OS X Clang release build.
    - os: osx
      compiler: clang
      sudo: required
      env: KSB_TARGET=OSX KSB_TYPE=Release

cache:
  apt: true

branches:
  only:
    - master

addons:
  apt:
    packages:
      - ninja-build
      - lcov

android:
  components:
    - tools
    - platform-tools

before_install:
  # Install the appropriate Linux packages.
  - if [[ "$KSB_TARGET" == "LINUX" || "$KSB_TARGET" == "COVERAGE" ]]; then sudo apt-get update; fi
  - if [[ "$KSB_TARGET" == "LINUX" || "$KSB_TARGET" == "COVERAGE" ]]; then sudo apt-get -y install python3 libx11-dev libxxf86vm-dev libxrandr-dev libxcb1-dev libxcb-keysyms1-dev libxcb-icccm4-dev clang; fi
  # Install ninja and python 3 on Mac OS X.
  - if [[ "$KSB_TARGET" == "OSX" ]]; then brew update; fi
  - if [[ "$KSB_TARGET" == "OSX" ]]; then brew install ninja; fi
  - if [[ "$KSB_TARGET" == "OSX" ]]; then brew install python3; fi
  - if [[ "$KSB_TARGET" == "OSX" ]]; then virtualenv venv -p python3; fi
  - if [[ "$KSB_TARGET" == "OSX" ]]; then source venv/bin/activate; fi

install:
  - if [[ "$KSB_TARGET" == "LINUX" || "$KSB_TARGET" == "COVERAGE" ]]; then pip install --user nose; fi
  - if [[ "$KSB_TARGET" == "LINUX" || "$KSB_TARGET" == "COVERAGE" ]]; then pip install --user cpp-coveralls; fi
    # Make sure we can find the above Python packages
  - if [[ "$KSB_TARGET" == "LINUX" || "$KSB_TARGET" == "COVERAGE" ]]; then export PATH=$HOME/.local/bin:$PATH; fi

#before_script:
#  - git clone https://github.com/KhronosGroup/glslang.git ../glslang
#  - git clone https://github.com/KhronosGroup/Vulkan-LoaderAndValidationLayers.git ../Vulkan-LoaderAndValidationLayers

script:
  - if [[ "$KSB_TARGET" == "LINUX"    ]]; then mkdir build && cd build; fi
  - if [[ "$KSB_TARGET" == "LINUX"    ]]; then cmake -GNinja -DCMAKE_BUILD_TYPE=${KSB_TYPE:-Debug} ..; fi
  - if [[ "$KSB_TARGET" == "LINUX"    ]]; then ninja; fi
  - if [[ "$KSB_TARGET" == "COVERAGE" ]]; then mkdir build && cd build; fi
  - if [[ "$KSB_TARGET" == "COVERAGE" ]]; then cmake -GNinja -DCMAKE_BUILD_TYPE=${KSB_TYPE:-Debug} -DENABLE_CODE_COVERAGE=ON ..; fi
  - if [[ "$KSB_TARGET" == "COVERAGE" ]]; then ninja; fi
  - if [[ "$KSB_TARGET" == "OSX"      ]]; then mkdir build && cd build; fi
  - if [[ "$KSB_TARGET" == "OSX"      ]]; then cmake -GNinja -DCMAKE_BUILD_TYPE=${KSB_TYPE:-Debug} ..; fi
  - if [[ "$KSB_TARGET" == "OSX"      ]]; then ninja; fi

notifications:
  email:
    recipients:
      - blazej.bucko@gmail.com
    on_success: change
    on_failure: always